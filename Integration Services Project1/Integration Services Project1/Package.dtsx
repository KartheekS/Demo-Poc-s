<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/20/2019 8:17:11 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DAL-8CO080-9W7"
  DTS:CreatorName="TSH\C402193"
  DTS:DTSID="{1A57A760-502A-4A09-9D58-A287CA32CC99}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1300.371"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="48"
  DTS:VersionGUID="{C11E59A8-2B4C-4121-A925-56D3390D03CC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.test]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D9A91E05-2569-4A5B-AC9D-92BFA8D640D9}"
      DTS:ObjectName="LocalHost.test">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=test;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B331A877-9BDE-4D2E-8338-1915E04200DE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="messageid">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B14EBF90-6393-4D6A-99F4-DB0418D5DF0D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="result">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FF6A171-EEFD-46EA-BFF1-9E2D8D1AD6C6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA737E19-42EB-4EF0-9F2D-81B982576F64}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="xmlmessagedoc">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{E3562DAD-FECF-4631-B518-95EAA5BE33B0}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{A31510D6-AD3A-4CC9-AE78-C522B9986A46}"
        DTS:ObjectName="{A31510D6-AD3A-4CC9-AE78-C522B9986A46}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::result" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{EB9F6407-E502-4D23-BAAB-721A2862904B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D9A91E05-2569-4A5B-AC9D-92BFA8D640D9}"
              SQLTask:SqlStatementSource="EXEC [dbo].[spPhy_CDIMakePatientLabChunkXMLRequest1]&#xA;?, ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::xmlmessagedoc"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::messageid"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{F450E437-61FC-4DEC-A66C-1E27D6A10949}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a32d173d370e48debcfa1c36a18a15c0"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::messageid,User::xmlmessagedoc">
              <ProjectItem
                Name="ST_a32d173d370e48debcfa1c36a18a15c0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e681a57f-11e6-4c1d-8da6-15d14f9054dd}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a32d173d370e48debcfa1c36a18a15c0</RootNamespace>
    <AssemblyName>ST_a32d173d370e48debcfa1c36a18a15c0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a32d173d370e48debcfa1c36a18a15c0.Properties.Settings.get_Default():ST_a32d173d370e48debcfa1c36a18a15c0.Properties.Sett" +
    "ings")]

namespace ST_a32d173d370e48debcfa1c36a18a15c0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Xml;
using System.IO;
#endregion

namespace ST_a32d173d370e48debcfa1c36a18a15c0
{

    public static class Extensions
    {
        public static string AsString(this XmlDocument xmlDoc)
        {
            using (StringWriter sw = new StringWriter())
            {
                using (XmlTextWriter tx = new XmlTextWriter(sw))
                {
                    xmlDoc.WriteTo(tx);
                    string strXmlText = sw.ToString();
                    return strXmlText;
                }
            }
        }
    }
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            var z = (Int64)Dts.Variables["User::messageid"].Value;
            string st = (string)Dts.Variables["User::xmlmessagedoc"].Value;
            XmlDocument docket = new XmlDocument();
            docket.LoadXml(st);
            docket.SelectSingleNode("//emr/id").InnerText = z.ToString();

            Dts.Variables["User::xmlmessagedoc"].Value = docket.AsString();



            if (st != null && z>0)
            {
                MessageBox.Show("OK!!!!!!!!!!!!"+st);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a32d173d370e48debcfa1c36a18a15c0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a32d173d370e48debcfa1c36a18a15c0</msb:DisplayName>
    <msb:ProjectId>{89B8C65E-B00C-434F-9120-6DB4579E044E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a32d173d370e48debcfa1c36a18a15c0.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a32d173d370e48debcfa1c36a18a15c0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Thomson Reuters")]
[assembly: AssemblyProduct("ST_a32d173d370e48debcfa1c36a18a15c0")]
[assembly: AssemblyCopyright("Copyright @ Thomson Reuters 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a32d173d370e48debcfa1c36a18a15c0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a32d173d370e48debcfa1c36a18a15c0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a32d173d370e48debcfa1c36a18a15c0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a32d173d370e48debcfa1c36a18a15c0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a32d173d370e48debcfa1c36a18a15c0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_a32d173d370e48debcfa1c36a18a15c0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPeSXl0AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAEjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMAwAABPAAAAAEAAALQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALQEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
MAAAAAAAAEgAAAACAAUAyCEAAEAOAAABAAAAAAAAAAgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgAzAAAAAQAAEXMRAAAKCgZzEgAACgsCB28TAAAKBm8U
AAAKDN4UBywGB28VAAAK3AYsBgZvFQAACtwIKgABHAAAAgANABAdAAoAAAAAAgAGACEnAAoAAAAA
EzACAKoAAAACAAARAigWAAAKbxcAAApyAQAAcG8YAAAKbxkAAAqlIwAAAQoCKBYAAApvFwAACnIh
AABwbxgAAApvGQAACnQkAAABC3MaAAAKDAgHbxsAAAoIckkAAHBvHAAAChIAKB0AAApvHgAACgIo
FgAACm8XAAAKciEAAHBvGAAACggoAQAABm8fAAAKBywWBhZqMRFyWwAAcAcoIAAACighAAAKJgIo
FgAAChZvIgAACioeAigjAAAKKh4CKCQAAAoqrn4BAAAELR5yeQAAcNAEAAACKCUAAApvJgAACnMn
AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoKAAACioucwkAAAaAAwAABCpC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACwBAAAI34AABwFAABkBgAAI1N0cmlu
Z3MAAAAAgAsAAOwAAAAjVVMAbAwAABAAAAAjR1VJRAAAAHwMAADEAQAAI0Jsb2IAAAAAAAAAAgAA
AVcdogEJAwAAAPoBMwAWAAABAAAAKQAAAAYAAAAGAAAACgAAAAIAAAAoAAAAAgAAABMAAAACAAAA
AgAAAAMAAAAEAAAAAQAAAAYAAAABAAAAAQAAAAAA3wMBAAAAAAAGAC0C7wQGAHwC7wQGAAsD7wQG
ALUB3AQTAGMFAAAGAOIBcAQGAF8CcAQGAEACcAQGAPICcAQGAJwCcAQGALUCcAQGAPkBcAQGABQC
QwMGAP0FIwQKACwGBwQGAKoENAAKAMEEBwQOANACjgMOACwBjgMGACoEIwQGAJgB3AQGAJoEDwUG
AIoEWwQSAGgByQMSAMkByQMSAEgBRgQGAH0B7wQGAMQENAAKAJYABwQKALcEBwQGAKcAIwQOALcD
jgMWAKUF1wAWAJ4A1wAGACUAIwQGAGgDIwQaAEsGuAUaABAGuAUGAPcAIwQGALMAIwQGAFoGcAQA
AAAAKwAAAAAAAQABAIEBEADNBQEAOQABAAEAAQAQADsEAQBNAAEAAgAAABAAFgVyBTkAAQAEAAAB
EACvBXIFaQADAAgAAwEAAOgFAABRAAQACwARAC8EnAARABwBoAARAHUApAAGBl0AqABWgNgFqwBW
gPwAqwBQIAAAAACWAGYDrwABAKwgAAAAAIYAQQQBAAIAYiEAAAAAhhjPBAEAAgBqIQAAAACDGM8E
AQACAHIhAAAAAJMIlgS1AAIAniEAAAAAkwgEAboAAgClIQAAAACTCBABvwACAK0hAAAAAJYIBAbF
AAMAtCEAAAAAhhjPBAEAAwC8IQAAAACRGNUEygADAAAAAQBuAAAAAQA9AwkAzwQBABEAzwQFABkA
zwQBACEAzwQKADEAzwQQADkAzwQQAEEAzwQQAEkAzwQQAFEAzwQQAFkAzwQQAGEAzwQQAGkAzwQQ
AJEAzwQBAKkAzwQBAMkAzwQVANkAzwQBAIEAzwQBAIkAzwQjAOkAggQpAHEAXQMvAPkAYAEBAJkA
4AU6AAEBoQVAAAkBGgRGABEBKQNNAHkAzwQBAHkAEgQQAOkAhQBRABkBXQMvAOkAOAYQABEBMwNX
ACEB9gVcACkBRgZiAAEBHQYFAJkAzwQBAHEAzwQBADkBxQBpADkBVgZyALEAzwR4ANEAzwQBAAgA
FACSAAgAGACXACAACwCXACkAewAFAS4ACwCXAC4AEwDdAC4AGwDmAC4AIwAFAS4AKwAOAS4AMwA3
AS4AOwA3AS4AQwA9AS4ASwAOAS4AUwBSAS4AWwA3AS4AYwB4AUMACwCXAEkAewAFAWEAgwCXAGMA
awCXAIMAcwCXABsAMwAEAAEABQADAAAAmgTOAAAAJAHTAAAACAbYAAIABQADAAIABgAFAAEABwAF
AAIACAAHAASAAAABAAAABRynggAAAAAAAAEAAAAEAAAAAAAAAAAAAACAAGUAAAAAAAQAAAAAAAAA
AAAAAIAABwQAAAAADgAAAAAAAAAAAAAAiQBvAwAAAAAEAAAAAAAAAAAAAACAACMEAAAAAA4AAAAA
AAAAAAAAAIkAPgAAAAAABAAAAAAAAAAAAAAAgAC4BQAAAAAAAAAAAQAAACAFAAAGAAMAAAAAU1Rf
YTMyZDE3M2QzNzBlNDhkZWJjZmExYzM2YTE4YTE1YzAASW50NjQAPE1vZHVsZT4AU3lzdGVtLklP
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAHhtbERvYwBk
ZWZhdWx0SW5zdGFuY2UAU2VsZWN0U2luZ2xlTm9kZQBYbWxOb2RlAFZhcmlhYmxlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFk
ZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEV4dGVuc2lvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBUb1N0cmluZwBBc1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfYTMyZDE3M2QzNzBlNDhkZWJjZmExYzM2YTE4YTE1YzAuZGxs
AFN5c3RlbS5YbWwATG9hZFhtbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAFdyaXRlVG8AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJpbmdX
cml0ZXIAWG1sV3JpdGVyAFhtbFRleHRXcml0ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
YTMyZDE3M2QzNzBlNDhkZWJjZmExYzM2YTE4YTE1YzAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2EzMmQxNzNkMzcwZTQ4ZGViY2ZhMWMzNmExOGExNWMw
LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBF
eHRlbnNpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0
X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFhtbERvY3VtZW50AHNldF9Jbm5l
clRleHQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQAAAB9VAHMAZQByADoAOgBtAGUAcwBz
AGEAZwBlAGkAZAAAJ1UAcwBlAHIAOgA6AHgAbQBsAG0AZQBzAHMAYQBnAGUAZABvAGMAABEvAC8A
ZQBtAHIALwBpAGQAAB1PAEsAIQAhACEAIQAhACEAIQAhACEAIQAhACEAAHFTAFQAXwBhADMAMgBk
ADEANwAzAGQAMwA3ADAAZQA0ADgAZABlAGIAYwBmAGEAMQBjADMANgBhADEAOABhADEANQBjADAA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAACSHJFAdoOQ6MaUUH2
HdIfAAMgAAEEIAEBCAUgAQERFQQgAQEOBSABARFhBwcDEkESRQ4FIAEBEnEFIAEBEnkDIAAOBgcD
Cg4SPQUgABKAgQUgABKAhQYgARKAiRwDIAAcBSABEnUOBCABARwFAAIODg4GAAERgJkOCAABEoCd
EYChBSAAEoClByACAQ4SgKUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSWQMGEl0DBhIU
AgYIAwYRGAUAAQ4SPQQAABJZBAAAEl0FAAEBEl0EAAASFAMAAAEECAASWQQIABJdBAgAEhQIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2EzMmQx
NzNkMzcwZTQ4ZGViY2ZhMWMzNmExOGExNWMwAAAFAQAAAAAUAQAPVGhvbXNvbiBSZXV0ZXJzAAAl
AQAgQ29weXJpZ2h0IEAgVGhvbXNvbiBSZXV0ZXJzIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA6DAAAAAAAAAAAAAAAjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQwAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAVgQAAAAAAAAAAAAAVgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAKeCBRwAAAEAp4IFHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBLYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAJIDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABAABAAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAFQAaABvAG0AcwBvAG4AIABSAGUAdQB0AGUAcgBzAAAAcAAkAAEARgBp
AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEAMwAyAGQAMQA3ADMAZAAzADcA
MABlADQAOABkAGUAYgBjAGYAYQAxAGMAMwA2AGEAMQA4AGEAMQA1AGMAMAAAAD4ADwABAEYAaQBs
AGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADEANwAzAC4AMwAzADQANAA3AAAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEAMwAyAGQAMQA3ADMAZAAzADcAMABl
ADQAOABkAGUAYgBjAGYAYQAxAGMAMwA2AGEAMQA4AGEAMQA1AGMAMAAuAGQAbABsAAAAZgAhAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAVABo
AG8AbQBzAG8AbgAgAFIAZQB1AHQAZQByAHMAIAAyADAAMQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwA
VAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABl
AG4AYQBtAGUAAABTAFQAXwBhADMAMgBkADEANwAzAGQAMwA3ADAAZQA0ADgAZABlAGIAYwBmAGEA
MQBjADMANgBhADEAOABhADEANQBjADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBh
AG0AZQAAAAAAUwBUAF8AYQAzADIAZAAxADcAMwBkADMANwAwAGUANAA4AGQAZQBiAGMAZgBhADEA
YwAzADYAYQAxADgAYQAxADUAYwAwAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA3ADEANwAzAC4AMwAzADQANAA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADEANwAzAC4AMwAzADQANAA3AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\update request in table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{548A0C86-C12F-4936-8677-72E4BB37E3DA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="update request in table"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D9A91E05-2569-4A5B-AC9D-92BFA8D640D9}"
              SQLTask:SqlStatementSource="update [dbo].[ApiRequestLog1]&#xA;Set Request = ?&#xA;where ApiRequestLogID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::messageid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::xmlmessagedoc"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000000" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{571EDF3D-5D0E-42A2-B7F0-8F86123FFAD4}"
          DTS:From="Package\Foreach Loop Container\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{9E826D42-8CA0-466B-A5E4-0050E22792D5}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\update request in table" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3436BDA0-09E9-45E0-AE66-DE9C1BD59A47}"
          DTS:ObjectName="{3436BDA0-09E9-45E0-AE66-DE9C1BD59A47}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::xmlmessagedoc" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{D4DAF2A7-16FB-46DC-8692-38697BBC36C4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c1f3b60c9af547f29b11f825bd587510"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::result">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1f3b60c9af547f29b11f825bd587510.Properties.Settings.get_Default():ST_c1f3b60c9af547f29b11f825bd587510.Properties.Sett" +
    "ings")]

namespace ST_c1f3b60c9af547f29b11f825bd587510.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_c1f3b60c9af547f29b11f825bd587510.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{71f7125a-46be-4cc1-b247-ed658e4e94ba}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c1f3b60c9af547f29b11f825bd587510</RootNamespace>
    <AssemblyName>ST_c1f3b60c9af547f29b11f825bd587510</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Xml;
using System.IO;
#endregion

namespace ST_c1f3b60c9af547f29b11f825bd587510
{

    public static class Extensions
    {
        public static string AsString(this XmlDocument xmlDoc)
        {
            using (StringWriter sw = new StringWriter())
            {
                using (XmlTextWriter tx = new XmlTextWriter(sw))
                {
                    xmlDoc.WriteTo(tx);
                    string strXmlText = sw.ToString();
                    return strXmlText;
                }
            }
        }
    }
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public static List<XmlDocument> ChunkDocket(XmlDocument docket, int chunkSize, XmlDocument master)
        {
            List<XmlDocument> newDockets = new List<XmlDocument>();
            //

            int orderCount = docket.SelectNodes("//emr/entry").Count;
            int chunkStart = 0;

            //XmlElement root = null;
            XmlNodeList chunk = null;

            while (chunkStart < orderCount)
            {
                XmlDocument newDocket = (XmlDocument)master.CloneNode(true);
                var user = newDocket.SelectSingleNode("//emr");
                // newDocket = new XmlDocument();
                //root = newDocket.CreateElement("emr");
                //newDocket.AppendChild(root);

                // TRYING TO APPEND CHILD NODES TO EXISTING XML DOC

                chunk = docket.SelectNodes(String.Format("//emr/entry[position() > {0} and position() <= {1}]", chunkStart, chunkStart + chunkSize));

                chunkStart += chunkSize;

                XmlNode targetNode = null;
                foreach (XmlNode c in chunk)
                {
                    targetNode = newDocket.ImportNode(c, true);
                    user.AppendChild(targetNode);

                }

                newDockets.Add(newDocket);
            }

            return newDockets;
        }

        public void Main()
		{
            // TODO: Add your code here
            Dictionary<int, string> z1 = new Dictionary<int, string>();


            string z = @"<?xml version = '1.0' encoding='UTF-8' standalone='yes'?><emr xmlns:json='http://james.newtonking.com/projects/json'><resourceType>Bundle</resourceType><id>20875</id><meta><lastUpdated>2019-08-08T20:23:16Z</lastUpdated></meta><type>transaction</type><entry json:Array='true'><resource><resourceType>Observation</resourceType><meta><lastUpdated>2019-08-08T20:23:16Z</lastUpdated></meta><id>1-18-40953610-BMI-1700879096</id><status>completed</status><category json:Array='true'> <coding json:Array='true'><system>http://hl7.org/fhir/observation-category</system><code>vital-signs</code></coding></category><category json:Array='true'> <coding json:Array='true'><system>http://wcm</system><code>BMI</code></coding></category><code><coding json:Array='true'><system>PHYTEL</system><code>BMI</code></coding></code><subject><reference>16</reference></subject><effectiveDateTime>2016-03-18T00:00:00Z</effectiveDateTime><valueQuantity><value>15.9700</value><unit>kg/m2</unit></valueQuantity></resource><request><method>POST</method><url>Observation/1-18-40953610-BMI-1700879096</url></request></entry><entry json:Array='true'><resource><resourceType>Observation</resourceType><meta><lastUpdated>2019-08-08T20:23:16Z</lastUpdated></meta><id>1-18-40953610-HEIGHT-1700888649</id><status>completed</status><category json:Array='true'> <coding json:Array='true'><system>http://hl7.org/fhir/observation-category</system><code>vital-signs</code></coding></category><category json:Array='true'> <coding json:Array='true'><system>http://wcm</system><code>Height</code></coding></category><code><coding json:Array='true'><system>PHYTEL</system><code>Height</code></coding></code><subject><reference>16</reference></subject><effectiveDateTime>2016-03-18T00:00:00Z</effectiveDateTime><valueQuantity><value>45.0000</value><unit>in</unit></valueQuantity></resource><request><method>POST</method><url>Observation/1-18-40953610-HEIGHT-1700888649</url></request></entry><entry json:Array='true'><resource><resourceType>Observation</resourceType><meta><lastUpdated>2019-08-08T20:23:16Z</lastUpdated></meta><id>1-18-40953610-WEIGHT-1700886618</id><status>completed</status><category json:Array='true'> <coding json:Array='true'><system>http://hl7.org/fhir/observation-category</system><code>vital-signs</code></coding></category><category json:Array='true'> <coding json:Array='true'><system>http://wcm</system><code>Weight</code></coding></category><code><coding json:Array='true'><system>PHYTEL</system><code>Weight</code></coding></code><subject><reference>16</reference></subject><effectiveDateTime>2016-03-18T00:00:00Z</effectiveDateTime><valueQuantity><value>736.0000</value><unit>oz</unit></valueQuantity></resource><request><method>POST</method><url>Observation/1-18-40953610-WEIGHT-1700886618</url></request></entry><entry json:Array='true'><resource><resourceType>Observation</resourceType><meta><lastUpdated>2019-08-08T20:23:16Z</lastUpdated></meta><id>13-32-2017986578</id><status>completed</status><category json:Array='true'> <coding json:Array='true'><system>http://hl7.org/fhir/observation-category</system><code>vital-signs</code></coding></category><category json:Array='true'> <coding json:Array='true'><system>http://wcm</system><code>Blood Pressure</code></coding></category><subject><reference>16</reference></subject><effectiveDateTime>2016-03-18T00:00:00Z</effectiveDateTime><component><code><coding><system>PHYTEL</system><code>Blood Pressure</code><display>Blood Pressure - Systolic</display></coding><coding><system>http://wcm</system><code>bp-s</code><display>Blood Pressure - Systolic</display></coding></code><valueQuantity><value>104.000000</value><unit>mmHg</unit></valueQuantity></component><component><code><coding><system>PHYTEL</system><code>Blood Pressure</code><display>Blood Pressure - Diastolic</display></coding><coding><system>http://wcm</system><code>bp-d</code><display>Blood Pressure - Diastolic</display></coding></code><valueQuantity><value>62.000000</value><unit>mmHg</unit></valueQuantity></component></resource><request><method>POST</method><url>Observation/13-32-2017986578</url></request></entry></emr>";

            XmlDocument docket = new XmlDocument();
            docket.LoadXml(z);

            XmlDocument p = (XmlDocument)docket.CloneNode(true);
            // p.LoadXml(z);

            var y = docket.AsString();

            XmlNode product = p.SelectSingleNode("/emr");
            foreach (XmlNode category in product.SelectNodes("entry"))
            {
                product.RemoveChild(category);
            }
            // string x = p.AsString();

            var obj = ChunkDocket(docket, 2, p);
            string s;
            List<string> d = new List<string>();
            foreach (var item in obj)
            {
                s = item.AsString();
                d.Add(s);
            }


            this.Dts.Variables["User::result"].Value =(Object) d;
            if(Dts.Variables["User::result"].Value!= null) { MessageBox.Show("OK"); }
                
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c1f3b60c9af547f29b11f825bd587510</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c1f3b60c9af547f29b11f825bd587510</msb:DisplayName>
    <msb:ProjectId>{0662BE00-B12F-4E38-A52E-030080F02F48}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c1f3b60c9af547f29b11f825bd587510.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c1f3b60c9af547f29b11f825bd587510")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Thomson Reuters")]
[assembly: AssemblyProduct("ST_c1f3b60c9af547f29b11f825bd587510")]
[assembly: AssemblyCopyright("Copyright @ Thomson Reuters 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1f3b60c9af547f29b11f825bd587510.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1f3b60c9af547f29b11f825bd587510.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1f3b60c9af547f29b11f825bd587510.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c1f3b60c9af547f29b11f825bd587510.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c1f3b60c9af547f29b11f825bd587510.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c1f3b60c9af547f29b11f825bd587510.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA9xXl0AAAAAAAAAAOAAIiALATAAADYAAAAIAAAAAAAAHlUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMxUAABPAAAAAGAAALQEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALQEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
VQAAAAAAAEgAAAACAAUAMCMAAOQwAAABAAAAAAAAABRUAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgAzAAAAAQAAEXMRAAAKCgZzEgAACgsCB28TAAAKBm8U
AAAKDN4UBywGB28VAAAK3AYsBgZvFQAACtwIKgABHAAAAgANABAdAAoAAAAAAgAGACEnAAoAAAAA
GzAFALkAAAACAAARcxYAAAoKAnIBAABwbxcAAApvGAAACgsWDDiSAAAABBdvGQAACnQPAAABDQly
GQAAcG8aAAAKEwQCciUAAHAIjCQAAAEIA1iMJAAAASgbAAAKbxcAAAoIA1gMFBMFbxwAAAoTBisj
EQZvHQAACnQVAAABEwcJEQcXbx4AAAoTBREEEQVvHwAACiYRBm8gAAAKLdTeFREGdRcAAAETCBEI
LAcRCG8VAAAK3AYJbyEAAAoIBz9n////BioAAAABEAAAAgBkADCUABUAAAAAGzADABwBAAADAAAR
cyIAAAomco0AAHAKcyMAAAoLBwZvJAAACgcXbxkAAAp0DwAAAQwHKAEAAAYmCHLOIABwbxoAAAoN
CXLYIABwbxcAAApvHAAAChMGKxcRBm8dAAAKdBUAAAETBwkRB28lAAAKJhEGbyAAAAot4N4VEQZ1
FwAAARMIEQgsBxEIbxUAAArcBxgIKAIAAAZzJgAAChMFbycAAAoTCSsXEgkoKAAACigBAAAGEwQR
BREEbykAAAoSCSgqAAAKLeDeDhIJ/hYEAAAbbxUAAArcAigrAAAKbywAAApy5CAAcG8tAAAKEQVv
LgAACgIoKwAACm8sAAAKcuQgAHBvLQAACm8vAAAKLAty/iAAcCgwAAAKJgIoKwAAChZvMQAACioB
HAAAAgBLACRvABUAAAAAAgCaACS+AA4AAAAAHgIoMgAACioeAigzAAAKKq5+AQAABC0ecgQhAHDQ
BAAAAig0AAAKbzUAAApzNgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKDcA
AAoqLnMKAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABYBQAA
I34AAMQFAABABwAAI1N0cmluZ3MAAAAABA0AAHghAAAjVVMAfC4AABAAAAAjR1VJRAAAAIwuAABY
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAAAPoBMwAWAAABAAAALgAAAAYAAAAGAAAACwAAAAUA
AAA3AAAAAgAAABMAAAADAAAAAgAAAAMAAAAEAAAABAAAAAEAAAAGAAAAAQAAAAEAAAAAAEkEAQAA
AAAABgCNAnoFBgDcAnoFBgBrA3oFBgAVAmcFEwDuBQAABgBCAtoEBgC/AtoEBgCgAtoEBgBSA9oE
BgD8AtoEBgAVA9oEBgBZAtoEBgB0Aq0DBgCnBo0ECgDpBnEEBgAUBUgACgArBXEEDgAwA/gDDgCM
AfgDBgAlAIIACgDrAHEEBgBABW8GBgAHAY0EUwBPBQAABgCUBI0EBgD4AWcFBgAEBZoFBgD0BMUE
EgDIATMEEgApAjMEEgCoAbAEBgDdAXoFBgAuBUgACgAhBXEECgALB3EEBgAsAI0EBgDSA40EBgAy
AIIADgAhBPgDFgA8BjcBFgD+ADcBGgAlB08GGgDNBk8GBgBXAY0EBgATAY0EBgA0B9oEAAAAAD8A
AAAAAAEAAQCBARAAZAYBADkAAQABAAEAEAClBAEATQABAAIAAAAQAKEFCQY5AAEABQAAARAARgYJ
Bn0AAwAJAAMBAACSBgAAZQAEAAwAEQCZBCQBEQB8ASgBEQDAACwBBgZxADABVoCCBjMBVoBcATMB
UCAAAAAAlgDQAzcBAQCsIAAAAACWAK4GPQECAIQhAAAAAIYAqwQBAAUAyCIAAAAAhhhaBQEABQDQ
IgAAAACDGFoFAQAFANgiAAAAAJMIAAVLAQUABCMAAAAAkwhkAVABBQALIwAAAACTCHABVQEFABMj
AAAAAJYIwQZbAQYAGiMAAAAAhhhaBQEABgAiIwAAAACRGGAFYAEGAAAAAQCdAAAAAQC6BgAAAgCj
AwAAAwA5BQAAAQCdAwkAWgUBABEAWgUFABkAWgUBACEAWgUKADEAWgUQADkAWgUQAEEAWgUQAEkA
WgUQAFEAWgUQAFkAWgUQAGEAWgUQAGkAWgUQAJEAWgUBANEAWgUBAPEAWgUVAAEBWgUBAIEAWgUB
AIkAWgUjAKkA7AQqAHEAxwMxALkAwAEBAAwAWgUBAKkA/QVTABkBAQdaAKkA4QBeAKkA0ABkACkB
oAZqABkBTAVxALEA9QZ2AHkA8wB6AKkAqACCALEAFweJAAwApACNABQAWgUBAHkAWgUBAHkAfAQQ
AKkAtACCABwAWgUBAAwATAW9ACQA9QbNABwApACNACQAFweJAJkAigbSADkBOAbYAEEBhATeAEkB
kwPlAEkBiQN2AFEBIAfqADkB2gYFAJkAWgUBAHEAWgUBAGEBJQHxAGEBMAf6ANkAWgUAAfkAWgUB
AAgAFAAaAQgAGAAfASAACwAfASkAewCbAS4ACwAfAS4AEwBzAS4AGwB8AS4AIwCbAS4AKwCkAS4A
MwDNAS4AOwDNAS4AQwDTAS4ASwCkAS4AUwDoAS4AWwDNAS4AYwAOAkMACwAfAUkAewCbAWEAgwAf
AWMAawAfAYMAcwAfARsANQCTAAQAAQAFAAMAAAAEBWQBAACEAWkBAADFBm4BAgAGAAMAAgAHAAUA
AQAIAAUAAgAJAAcATACvALcAxgAEgAAAAQAAAAUcs3EAAAAAAAABAAAABAAAAAAAAAAAAAAACAF5
AAAAAAAEAAAAAAAAAAAAAAAIAXEEAAAAAA4AAAAAAAAAAAAAABEB2QMAAAAABAAAAAAAAAAAAAAA
CAGNBAAAAAAOAAAAAAAAAAAAAAARAVIAAAAAAAQAAAAAAAAAAAAAAAgBTwYAAAAAAAAAAAEAAACr
BQAABgADAAAAAAAAU1RfYzFmM2I2MGM5YWY1NDdmMjliMTFmODI1YmQ1ODc1MTAATGlzdGAxAElu
dDMyAERpY3Rpb25hcnlgMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5N
YW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAeG1s
RG9jAEFkZABBcHBlbmRDaGlsZABSZW1vdmVDaGlsZABkZWZhdWx0SW5zdGFuY2UAU2VsZWN0U2lu
Z2xlTm9kZQBDbG9uZU5vZGUAWG1sTm9kZQBJbXBvcnROb2RlAFZhcmlhYmxlAElEaXNwb3NhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEV4dGVuc2lvbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAY2h1bmtTaXplAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVG9TdHJpbmcAQXNTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2MxZjNiNjBjOWFmNTQ3ZjI5YjExZjgyNWJkNTg3
NTEwLmRsbABTeXN0ZW0uWG1sAExvYWRYbWwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VN
YW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBXcml0ZVRvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIA
U3RyaW5nV3JpdGVyAFhtbFdyaXRlcgBYbWxUZXh0V3JpdGVyAG1hc3RlcgBJRW51bWVyYXRvcgBH
ZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2MxZjNiNjBjOWFmNTQ3ZjI5
YjExZjgyNWJkNTg3NTEwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTZWxlY3ROb2RlcwBTVF9jMWYzYjYwYzlhZjU0N2YyOWIxMWY4MjViZDU4NzUxMC5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMARXh0ZW5z
aW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARm9y
bWF0AE9iamVjdABDaHVua0RvY2tldABkb2NrZXQAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNl
dF9UYXNrUmVzdWx0AFhtbERvY3VtZW50AGdldF9DdXJyZW50AGdldF9Db3VudABYbWxOb2RlTGlz
dABNb3ZlTmV4dABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAAAAXLwAvAGUAbQByAC8A
ZQBuAHQAcgB5AAALLwAvAGUAbQByAABnLwAvAGUAbQByAC8AZQBuAHQAcgB5AFsAcABvAHMAaQB0
AGkAbwBuACgAKQAgAD4AIAB7ADAAfQAgAGEAbgBkACAAcABvAHMAaQB0AGkAbwBuACgAKQAgADwA
PQAgAHsAMQB9AF0AAKA/PAA/AHgAbQBsACAAdgBlAHIAcwBpAG8AbgAgAD0AIAAnADEALgAwACcA
IABlAG4AYwBvAGQAaQBuAGcAPQAnAFUAVABGAC0AOAAnACAAcwB0AGEAbgBkAGEAbABvAG4AZQA9
ACcAeQBlAHMAJwA/AD4APABlAG0AcgAgAHgAbQBsAG4AcwA6AGoAcwBvAG4APQAnAGgAdAB0AHAA
OgAvAC8AagBhAG0AZQBzAC4AbgBlAHcAdABvAG4AawBpAG4AZwAuAGMAbwBtAC8AcAByAG8AagBl
AGMAdABzAC8AagBzAG8AbgAnAD4APAByAGUAcwBvAHUAcgBjAGUAVAB5AHAAZQA+AEIAdQBuAGQA
bABlADwALwByAGUAcwBvAHUAcgBjAGUAVAB5AHAAZQA+ADwAaQBkAD4AMgAwADgANwA1ADwALwBp
AGQAPgA8AG0AZQB0AGEAPgA8AGwAYQBzAHQAVQBwAGQAYQB0AGUAZAA+ADIAMAAxADkALQAwADgA
LQAwADgAVAAyADAAOgAyADMAOgAxADYAWgA8AC8AbABhAHMAdABVAHAAZABhAHQAZQBkAD4APAAv
AG0AZQB0AGEAPgA8AHQAeQBwAGUAPgB0AHIAYQBuAHMAYQBjAHQAaQBvAG4APAAvAHQAeQBwAGUA
PgA8AGUAbgB0AHIAeQAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcgBl
AHMAbwB1AHIAYwBlAD4APAByAGUAcwBvAHUAcgBjAGUAVAB5AHAAZQA+AE8AYgBzAGUAcgB2AGEA
dABpAG8AbgA8AC8AcgBlAHMAbwB1AHIAYwBlAFQAeQBwAGUAPgA8AG0AZQB0AGEAPgA8AGwAYQBz
AHQAVQBwAGQAYQB0AGUAZAA+ADIAMAAxADkALQAwADgALQAwADgAVAAyADAAOgAyADMAOgAxADYA
WgA8AC8AbABhAHMAdABVAHAAZABhAHQAZQBkAD4APAAvAG0AZQB0AGEAPgA8AGkAZAA+ADEALQAx
ADgALQA0ADAAOQA1ADMANgAxADAALQBCAE0ASQAtADEANwAwADAAOAA3ADkAMAA5ADYAPAAvAGkA
ZAA+ADwAcwB0AGEAdAB1AHMAPgBjAG8AbQBwAGwAZQB0AGUAZAA8AC8AcwB0AGEAdAB1AHMAPgA8
AGMAYQB0AGUAZwBvAHIAeQAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ACAA
PABjAG8AZABpAG4AZwAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcwB5
AHMAdABlAG0APgBoAHQAdABwADoALwAvAGgAbAA3AC4AbwByAGcALwBmAGgAaQByAC8AbwBiAHMA
ZQByAHYAYQB0AGkAbwBuAC0AYwBhAHQAZQBnAG8AcgB5ADwALwBzAHkAcwB0AGUAbQA+ADwAYwBv
AGQAZQA+AHYAaQB0AGEAbAAtAHMAaQBnAG4AcwA8AC8AYwBvAGQAZQA+ADwALwBjAG8AZABpAG4A
ZwA+ADwALwBjAGEAdABlAGcAbwByAHkAPgA8AGMAYQB0AGUAZwBvAHIAeQAgAGoAcwBvAG4AOgBB
AHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ACAAPABjAG8AZABpAG4AZwAgAGoAcwBvAG4AOgBBAHIA
cgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcwB5AHMAdABlAG0APgBoAHQAdABwADoALwAvAHcAYwBt
ADwALwBzAHkAcwB0AGUAbQA+ADwAYwBvAGQAZQA+AEIATQBJADwALwBjAG8AZABlAD4APAAvAGMA
bwBkAGkAbgBnAD4APAAvAGMAYQB0AGUAZwBvAHIAeQA+ADwAYwBvAGQAZQA+ADwAYwBvAGQAaQBu
AGcAIABqAHMAbwBuADoAQQByAHIAYQB5AD0AJwB0AHIAdQBlACcAPgA8AHMAeQBzAHQAZQBtAD4A
UABIAFkAVABFAEwAPAAvAHMAeQBzAHQAZQBtAD4APABjAG8AZABlAD4AQgBNAEkAPAAvAGMAbwBk
AGUAPgA8AC8AYwBvAGQAaQBuAGcAPgA8AC8AYwBvAGQAZQA+ADwAcwB1AGIAagBlAGMAdAA+ADwA
cgBlAGYAZQByAGUAbgBjAGUAPgAxADYAPAAvAHIAZQBmAGUAcgBlAG4AYwBlAD4APAAvAHMAdQBi
AGoAZQBjAHQAPgA8AGUAZgBmAGUAYwB0AGkAdgBlAEQAYQB0AGUAVABpAG0AZQA+ADIAMAAxADYA
LQAwADMALQAxADgAVAAwADAAOgAwADAAOgAwADAAWgA8AC8AZQBmAGYAZQBjAHQAaQB2AGUARABh
AHQAZQBUAGkAbQBlAD4APAB2AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4APAB2AGEAbAB1AGUA
PgAxADUALgA5ADcAMAAwADwALwB2AGEAbAB1AGUAPgA8AHUAbgBpAHQAPgBrAGcALwBtADIAPAAv
AHUAbgBpAHQAPgA8AC8AdgBhAGwAdQBlAFEAdQBhAG4AdABpAHQAeQA+ADwALwByAGUAcwBvAHUA
cgBjAGUAPgA8AHIAZQBxAHUAZQBzAHQAPgA8AG0AZQB0AGgAbwBkAD4AUABPAFMAVAA8AC8AbQBl
AHQAaABvAGQAPgA8AHUAcgBsAD4ATwBiAHMAZQByAHYAYQB0AGkAbwBuAC8AMQAtADEAOAAtADQA
MAA5ADUAMwA2ADEAMAAtAEIATQBJAC0AMQA3ADAAMAA4ADcAOQAwADkANgA8AC8AdQByAGwAPgA8
AC8AcgBlAHEAdQBlAHMAdAA+ADwALwBlAG4AdAByAHkAPgA8AGUAbgB0AHIAeQAgAGoAcwBvAG4A
OgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcgBlAHMAbwB1AHIAYwBlAD4APAByAGUAcwBv
AHUAcgBjAGUAVAB5AHAAZQA+AE8AYgBzAGUAcgB2AGEAdABpAG8AbgA8AC8AcgBlAHMAbwB1AHIA
YwBlAFQAeQBwAGUAPgA8AG0AZQB0AGEAPgA8AGwAYQBzAHQAVQBwAGQAYQB0AGUAZAA+ADIAMAAx
ADkALQAwADgALQAwADgAVAAyADAAOgAyADMAOgAxADYAWgA8AC8AbABhAHMAdABVAHAAZABhAHQA
ZQBkAD4APAAvAG0AZQB0AGEAPgA8AGkAZAA+ADEALQAxADgALQA0ADAAOQA1ADMANgAxADAALQBI
AEUASQBHAEgAVAAtADEANwAwADAAOAA4ADgANgA0ADkAPAAvAGkAZAA+ADwAcwB0AGEAdAB1AHMA
PgBjAG8AbQBwAGwAZQB0AGUAZAA8AC8AcwB0AGEAdAB1AHMAPgA8AGMAYQB0AGUAZwBvAHIAeQAg
AGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ACAAPABjAG8AZABpAG4AZwAgAGoA
cwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcwB5AHMAdABlAG0APgBoAHQAdABw
ADoALwAvAGgAbAA3AC4AbwByAGcALwBmAGgAaQByAC8AbwBiAHMAZQByAHYAYQB0AGkAbwBuAC0A
YwBhAHQAZQBnAG8AcgB5ADwALwBzAHkAcwB0AGUAbQA+ADwAYwBvAGQAZQA+AHYAaQB0AGEAbAAt
AHMAaQBnAG4AcwA8AC8AYwBvAGQAZQA+ADwALwBjAG8AZABpAG4AZwA+ADwALwBjAGEAdABlAGcA
bwByAHkAPgA8AGMAYQB0AGUAZwBvAHIAeQAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1
AGUAJwA+ACAAPABjAG8AZABpAG4AZwAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUA
JwA+ADwAcwB5AHMAdABlAG0APgBoAHQAdABwADoALwAvAHcAYwBtADwALwBzAHkAcwB0AGUAbQA+
ADwAYwBvAGQAZQA+AEgAZQBpAGcAaAB0ADwALwBjAG8AZABlAD4APAAvAGMAbwBkAGkAbgBnAD4A
PAAvAGMAYQB0AGUAZwBvAHIAeQA+ADwAYwBvAGQAZQA+ADwAYwBvAGQAaQBuAGcAIABqAHMAbwBu
ADoAQQByAHIAYQB5AD0AJwB0AHIAdQBlACcAPgA8AHMAeQBzAHQAZQBtAD4AUABIAFkAVABFAEwA
PAAvAHMAeQBzAHQAZQBtAD4APABjAG8AZABlAD4ASABlAGkAZwBoAHQAPAAvAGMAbwBkAGUAPgA8
AC8AYwBvAGQAaQBuAGcAPgA8AC8AYwBvAGQAZQA+ADwAcwB1AGIAagBlAGMAdAA+ADwAcgBlAGYA
ZQByAGUAbgBjAGUAPgAxADYAPAAvAHIAZQBmAGUAcgBlAG4AYwBlAD4APAAvAHMAdQBiAGoAZQBj
AHQAPgA8AGUAZgBmAGUAYwB0AGkAdgBlAEQAYQB0AGUAVABpAG0AZQA+ADIAMAAxADYALQAwADMA
LQAxADgAVAAwADAAOgAwADAAOgAwADAAWgA8AC8AZQBmAGYAZQBjAHQAaQB2AGUARABhAHQAZQBU
AGkAbQBlAD4APAB2AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4APAB2AGEAbAB1AGUAPgA0ADUA
LgAwADAAMAAwADwALwB2AGEAbAB1AGUAPgA8AHUAbgBpAHQAPgBpAG4APAAvAHUAbgBpAHQAPgA8
AC8AdgBhAGwAdQBlAFEAdQBhAG4AdABpAHQAeQA+ADwALwByAGUAcwBvAHUAcgBjAGUAPgA8AHIA
ZQBxAHUAZQBzAHQAPgA8AG0AZQB0AGgAbwBkAD4AUABPAFMAVAA8AC8AbQBlAHQAaABvAGQAPgA8
AHUAcgBsAD4ATwBiAHMAZQByAHYAYQB0AGkAbwBuAC8AMQAtADEAOAAtADQAMAA5ADUAMwA2ADEA
MAAtAEgARQBJAEcASABUAC0AMQA3ADAAMAA4ADgAOAA2ADQAOQA8AC8AdQByAGwAPgA8AC8AcgBl
AHEAdQBlAHMAdAA+ADwALwBlAG4AdAByAHkAPgA8AGUAbgB0AHIAeQAgAGoAcwBvAG4AOgBBAHIA
cgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcgBlAHMAbwB1AHIAYwBlAD4APAByAGUAcwBvAHUAcgBj
AGUAVAB5AHAAZQA+AE8AYgBzAGUAcgB2AGEAdABpAG8AbgA8AC8AcgBlAHMAbwB1AHIAYwBlAFQA
eQBwAGUAPgA8AG0AZQB0AGEAPgA8AGwAYQBzAHQAVQBwAGQAYQB0AGUAZAA+ADIAMAAxADkALQAw
ADgALQAwADgAVAAyADAAOgAyADMAOgAxADYAWgA8AC8AbABhAHMAdABVAHAAZABhAHQAZQBkAD4A
PAAvAG0AZQB0AGEAPgA8AGkAZAA+ADEALQAxADgALQA0ADAAOQA1ADMANgAxADAALQBXAEUASQBH
AEgAVAAtADEANwAwADAAOAA4ADYANgAxADgAPAAvAGkAZAA+ADwAcwB0AGEAdAB1AHMAPgBjAG8A
bQBwAGwAZQB0AGUAZAA8AC8AcwB0AGEAdAB1AHMAPgA8AGMAYQB0AGUAZwBvAHIAeQAgAGoAcwBv
AG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ACAAPABjAG8AZABpAG4AZwAgAGoAcwBvAG4A
OgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwAcwB5AHMAdABlAG0APgBoAHQAdABwADoALwAv
AGgAbAA3AC4AbwByAGcALwBmAGgAaQByAC8AbwBiAHMAZQByAHYAYQB0AGkAbwBuAC0AYwBhAHQA
ZQBnAG8AcgB5ADwALwBzAHkAcwB0AGUAbQA+ADwAYwBvAGQAZQA+AHYAaQB0AGEAbAAtAHMAaQBn
AG4AcwA8AC8AYwBvAGQAZQA+ADwALwBjAG8AZABpAG4AZwA+ADwALwBjAGEAdABlAGcAbwByAHkA
PgA8AGMAYQB0AGUAZwBvAHIAeQAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+
ACAAPABjAG8AZABpAG4AZwAgAGoAcwBvAG4AOgBBAHIAcgBhAHkAPQAnAHQAcgB1AGUAJwA+ADwA
cwB5AHMAdABlAG0APgBoAHQAdABwADoALwAvAHcAYwBtADwALwBzAHkAcwB0AGUAbQA+ADwAYwBv
AGQAZQA+AFcAZQBpAGcAaAB0ADwALwBjAG8AZABlAD4APAAvAGMAbwBkAGkAbgBnAD4APAAvAGMA
YQB0AGUAZwBvAHIAeQA+ADwAYwBvAGQAZQA+ADwAYwBvAGQAaQBuAGcAIABqAHMAbwBuADoAQQBy
AHIAYQB5AD0AJwB0AHIAdQBlACcAPgA8AHMAeQBzAHQAZQBtAD4AUABIAFkAVABFAEwAPAAvAHMA
eQBzAHQAZQBtAD4APABjAG8AZABlAD4AVwBlAGkAZwBoAHQAPAAvAGMAbwBkAGUAPgA8AC8AYwBv
AGQAaQBuAGcAPgA8AC8AYwBvAGQAZQA+ADwAcwB1AGIAagBlAGMAdAA+ADwAcgBlAGYAZQByAGUA
bgBjAGUAPgAxADYAPAAvAHIAZQBmAGUAcgBlAG4AYwBlAD4APAAvAHMAdQBiAGoAZQBjAHQAPgA8
AGUAZgBmAGUAYwB0AGkAdgBlAEQAYQB0AGUAVABpAG0AZQA+ADIAMAAxADYALQAwADMALQAxADgA
VAAwADAAOgAwADAAOgAwADAAWgA8AC8AZQBmAGYAZQBjAHQAaQB2AGUARABhAHQAZQBUAGkAbQBl
AD4APAB2AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4APAB2AGEAbAB1AGUAPgA3ADMANgAuADAA
MAAwADAAPAAvAHYAYQBsAHUAZQA+ADwAdQBuAGkAdAA+AG8AegA8AC8AdQBuAGkAdAA+ADwALwB2
AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4APAAvAHIAZQBzAG8AdQByAGMAZQA+ADwAcgBlAHEA
dQBlAHMAdAA+ADwAbQBlAHQAaABvAGQAPgBQAE8AUwBUADwALwBtAGUAdABoAG8AZAA+ADwAdQBy
AGwAPgBPAGIAcwBlAHIAdgBhAHQAaQBvAG4ALwAxAC0AMQA4AC0ANAAwADkANQAzADYAMQAwAC0A
VwBFAEkARwBIAFQALQAxADcAMAAwADgAOAA2ADYAMQA4ADwALwB1AHIAbAA+ADwALwByAGUAcQB1
AGUAcwB0AD4APAAvAGUAbgB0AHIAeQA+ADwAZQBuAHQAcgB5ACAAagBzAG8AbgA6AEEAcgByAGEA
eQA9ACcAdAByAHUAZQAnAD4APAByAGUAcwBvAHUAcgBjAGUAPgA8AHIAZQBzAG8AdQByAGMAZQBU
AHkAcABlAD4ATwBiAHMAZQByAHYAYQB0AGkAbwBuADwALwByAGUAcwBvAHUAcgBjAGUAVAB5AHAA
ZQA+ADwAbQBlAHQAYQA+ADwAbABhAHMAdABVAHAAZABhAHQAZQBkAD4AMgAwADEAOQAtADAAOAAt
ADAAOABUADIAMAA6ADIAMwA6ADEANgBaADwALwBsAGEAcwB0AFUAcABkAGEAdABlAGQAPgA8AC8A
bQBlAHQAYQA+ADwAaQBkAD4AMQAzAC0AMwAyAC0AMgAwADEANwA5ADgANgA1ADcAOAA8AC8AaQBk
AD4APABzAHQAYQB0AHUAcwA+AGMAbwBtAHAAbABlAHQAZQBkADwALwBzAHQAYQB0AHUAcwA+ADwA
YwBhAHQAZQBnAG8AcgB5ACAAagBzAG8AbgA6AEEAcgByAGEAeQA9ACcAdAByAHUAZQAnAD4AIAA8
AGMAbwBkAGkAbgBnACAAagBzAG8AbgA6AEEAcgByAGEAeQA9ACcAdAByAHUAZQAnAD4APABzAHkA
cwB0AGUAbQA+AGgAdAB0AHAAOgAvAC8AaABsADcALgBvAHIAZwAvAGYAaABpAHIALwBvAGIAcwBl
AHIAdgBhAHQAaQBvAG4ALQBjAGEAdABlAGcAbwByAHkAPAAvAHMAeQBzAHQAZQBtAD4APABjAG8A
ZABlAD4AdgBpAHQAYQBsAC0AcwBpAGcAbgBzADwALwBjAG8AZABlAD4APAAvAGMAbwBkAGkAbgBn
AD4APAAvAGMAYQB0AGUAZwBvAHIAeQA+ADwAYwBhAHQAZQBnAG8AcgB5ACAAagBzAG8AbgA6AEEA
cgByAGEAeQA9ACcAdAByAHUAZQAnAD4AIAA8AGMAbwBkAGkAbgBnACAAagBzAG8AbgA6AEEAcgBy
AGEAeQA9ACcAdAByAHUAZQAnAD4APABzAHkAcwB0AGUAbQA+AGgAdAB0AHAAOgAvAC8AdwBjAG0A
PAAvAHMAeQBzAHQAZQBtAD4APABjAG8AZABlAD4AQgBsAG8AbwBkACAAUAByAGUAcwBzAHUAcgBl
ADwALwBjAG8AZABlAD4APAAvAGMAbwBkAGkAbgBnAD4APAAvAGMAYQB0AGUAZwBvAHIAeQA+ADwA
cwB1AGIAagBlAGMAdAA+ADwAcgBlAGYAZQByAGUAbgBjAGUAPgAxADYAPAAvAHIAZQBmAGUAcgBl
AG4AYwBlAD4APAAvAHMAdQBiAGoAZQBjAHQAPgA8AGUAZgBmAGUAYwB0AGkAdgBlAEQAYQB0AGUA
VABpAG0AZQA+ADIAMAAxADYALQAwADMALQAxADgAVAAwADAAOgAwADAAOgAwADAAWgA8AC8AZQBm
AGYAZQBjAHQAaQB2AGUARABhAHQAZQBUAGkAbQBlAD4APABjAG8AbQBwAG8AbgBlAG4AdAA+ADwA
YwBvAGQAZQA+ADwAYwBvAGQAaQBuAGcAPgA8AHMAeQBzAHQAZQBtAD4AUABIAFkAVABFAEwAPAAv
AHMAeQBzAHQAZQBtAD4APABjAG8AZABlAD4AQgBsAG8AbwBkACAAUAByAGUAcwBzAHUAcgBlADwA
LwBjAG8AZABlAD4APABkAGkAcwBwAGwAYQB5AD4AQgBsAG8AbwBkACAAUAByAGUAcwBzAHUAcgBl
ACAALQAgAFMAeQBzAHQAbwBsAGkAYwA8AC8AZABpAHMAcABsAGEAeQA+ADwALwBjAG8AZABpAG4A
ZwA+ADwAYwBvAGQAaQBuAGcAPgA8AHMAeQBzAHQAZQBtAD4AaAB0AHQAcAA6AC8ALwB3AGMAbQA8
AC8AcwB5AHMAdABlAG0APgA8AGMAbwBkAGUAPgBiAHAALQBzADwALwBjAG8AZABlAD4APABkAGkA
cwBwAGwAYQB5AD4AQgBsAG8AbwBkACAAUAByAGUAcwBzAHUAcgBlACAALQAgAFMAeQBzAHQAbwBs
AGkAYwA8AC8AZABpAHMAcABsAGEAeQA+ADwALwBjAG8AZABpAG4AZwA+ADwALwBjAG8AZABlAD4A
PAB2AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4APAB2AGEAbAB1AGUAPgAxADAANAAuADAAMAAw
ADAAMAAwADwALwB2AGEAbAB1AGUAPgA8AHUAbgBpAHQAPgBtAG0ASABnADwALwB1AG4AaQB0AD4A
PAAvAHYAYQBsAHUAZQBRAHUAYQBuAHQAaQB0AHkAPgA8AC8AYwBvAG0AcABvAG4AZQBuAHQAPgA8
AGMAbwBtAHAAbwBuAGUAbgB0AD4APABjAG8AZABlAD4APABjAG8AZABpAG4AZwA+ADwAcwB5AHMA
dABlAG0APgBQAEgAWQBUAEUATAA8AC8AcwB5AHMAdABlAG0APgA8AGMAbwBkAGUAPgBCAGwAbwBv
AGQAIABQAHIAZQBzAHMAdQByAGUAPAAvAGMAbwBkAGUAPgA8AGQAaQBzAHAAbABhAHkAPgBCAGwA
bwBvAGQAIABQAHIAZQBzAHMAdQByAGUAIAAtACAARABpAGEAcwB0AG8AbABpAGMAPAAvAGQAaQBz
AHAAbABhAHkAPgA8AC8AYwBvAGQAaQBuAGcAPgA8AGMAbwBkAGkAbgBnAD4APABzAHkAcwB0AGUA
bQA+AGgAdAB0AHAAOgAvAC8AdwBjAG0APAAvAHMAeQBzAHQAZQBtAD4APABjAG8AZABlAD4AYgBw
AC0AZAA8AC8AYwBvAGQAZQA+ADwAZABpAHMAcABsAGEAeQA+AEIAbABvAG8AZAAgAFAAcgBlAHMA
cwB1AHIAZQAgAC0AIABEAGkAYQBzAHQAbwBsAGkAYwA8AC8AZABpAHMAcABsAGEAeQA+ADwALwBj
AG8AZABpAG4AZwA+ADwALwBjAG8AZABlAD4APAB2AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4A
PAB2AGEAbAB1AGUAPgA2ADIALgAwADAAMAAwADAAMAA8AC8AdgBhAGwAdQBlAD4APAB1AG4AaQB0
AD4AbQBtAEgAZwA8AC8AdQBuAGkAdAA+ADwALwB2AGEAbAB1AGUAUQB1AGEAbgB0AGkAdAB5AD4A
PAAvAGMAbwBtAHAAbwBuAGUAbgB0AD4APAAvAHIAZQBzAG8AdQByAGMAZQA+ADwAcgBlAHEAdQBl
AHMAdAA+ADwAbQBlAHQAaABvAGQAPgBQAE8AUwBUADwALwBtAGUAdABoAG8AZAA+ADwAdQByAGwA
PgBPAGIAcwBlAHIAdgBhAHQAaQBvAG4ALwAxADMALQAzADIALQAyADAAMQA3ADkAOAA2ADUANwA4
ADwALwB1AHIAbAA+ADwALwByAGUAcQB1AGUAcwB0AD4APAAvAGUAbgB0AHIAeQA+ADwALwBlAG0A
cgA+AAEJLwBlAG0AcgAAC2UAbgB0AHIAeQAAGVUAcwBlAHIAOgA6AHIAZQBzAHUAbAB0AAAFTwBL
AABxUwBUAF8AYwAxAGYAMwBiADYAMABjADkAYQBmADUANAA3AGYAMgA5AGIAMQAxAGYAOAAyADUA
YgBkADUAOAA3ADUAMQAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAAALKE7DsnnU5LoNAa2IBnvsQAAyAAAQQgAQEIBSABAREVBCABAQ4FIAEBEXUHBwMSQRJFDgYg
AQESgIUGIAEBEoCJAyAADhYHCRUSUQESPQgIEj0SVRJVElkSVRJdBhUSUQESPQYgARKAjQ4DIAAI
BSABElUCBSABElUOBgADDg4cHAQgABJZAyAAHAcgAhJVElUCBiABElUSVQMgAAIFIAEBEwAbBwoO
Ej0SPRJVDhUSUQEOElkSVRJdFRFhARI9BxUSgJkCCA4FFRJRAQ4IIAAVEWEBEwAGFRFhARI9BCAA
EwAFIAASgJ0FIAASgKEGIAESgKUcBCABARwGAAERgK0OCAABEoCxEYC1BSAAEoC5ByACAQ4SgLkI
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSbQMGEnEDBhIUAgYIAwYRGAUAAQ4SPQ0AAxUS
UQESPRI9CBI9BAAAEm0EAAAScQUAAQEScQQAABIUAwAAAQQIABJtBAgAEnEECAASFAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYzFmM2I2MGM5
YWY1NDdmMjliMTFmODI1YmQ1ODc1MTAAAAUBAAAAABQBAA9UaG9tc29uIFJldXRlcnMAACUBACBD
b3B5cmlnaHQgQCBUaG9tc29uIFJldXRlcnMgMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAA9FQAAAAAAAAAAAAADlUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAVgQAAAAAAAAA
AAAAVgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABALNx
BRwAAAEAs3EFHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBLYDAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAJIDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQAB
AEMAbwBtAG0AZQBuAHQAcwAAAAAAAABAABAAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAFQA
aABvAG0AcwBvAG4AIABSAGUAdQB0AGUAcgBzAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBw
AHQAaQBvAG4AAAAAAFMAVABfAGMAMQBmADMAYgA2ADAAYwA5AGEAZgA1ADQANwBmADIAOQBiADEA
MQBmADgAMgA1AGIAZAA1ADgANwA1ADEAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA3ADEANwAzAC4AMgA5ADEAMAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAVABfAGMAMQBmADMAYgA2ADAAYwA5AGEAZgA1ADQANwBmADIAOQBiADEAMQBm
ADgAMgA1AGIAZAA1ADgANwA1ADEAMAAuAGQAbABsAAAAZgAhAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAVABoAG8AbQBzAG8AbgAgAFIAZQB1
AHQAZQByAHMAIAAyADAAMQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBj
ADEAZgAzAGIANgAwAGMAOQBhAGYANQA0ADcAZgAyADkAYgAxADEAZgA4ADIANQBiAGQANQA4ADcA
NQAxADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AYwAx
AGYAMwBiADYAMABjADkAYQBmADUANAA3AGYAMgA5AGIAMQAxAGYAOAAyADUAYgBkADUAOAA3ADUA
MQAwAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADEANwAz
AC4AMgA5ADEAMAA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADEANwAzAC4AMgA5ADEAMAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAACA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C046EFD1-5B8E-483A-A9B9-3265664AE4A5}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Execute SQL Task"
          TopLeft="35,39" />
        <NodeLayout
          Size="133,42"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="55,100" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="35,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20,61"
              Start="0,0"
              End="12.5,61">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,57" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,57"
                    Point2="-22.5,61"
                    Point3="-18.5,61" />
                  <mssgle:LineSegment
                    End="12.5,61" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\update request in table"
          TopLeft="44,187" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="121.5,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.5,45"
              Start="0,0"
              End="9.5,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="5.5,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="5.5,22.5"
                    Point2="9.5,22.5"
                    Point3="9.5,26.5" />
                  <mssgle:LineSegment
                    End="9.5,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="279,299"
          Size="279,342"
          Id="Package\Foreach Loop Container"
          TopLeft="263,217" />
        <NodeLayout
          Size="133,42"
          Id="Package\Script Task"
          TopLeft="267,87" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="333.5,129">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69,88"
              Start="0,0"
              End="69,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40"
                    Point2="0,44"
                    Point3="4,44" />
                  <mssgle:LineSegment
                    End="65,44" />
                  <mssgle:CubicBezierSegment
                    Point1="65,44"
                    Point2="69,44"
                    Point3="69,48" />
                  <mssgle:LineSegment
                    End="69,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>